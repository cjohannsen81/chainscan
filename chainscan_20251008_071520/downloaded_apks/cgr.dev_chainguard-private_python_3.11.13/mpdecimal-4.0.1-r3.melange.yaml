package:
  name: mpdecimal
  version: 4.0.1
  epoch: 3
  description: complete implementation of the general decimal arithmetic specification
  commit: 816f399eca16c98994a5f607d6a8de6df29939b9
  copyright:
    - license: BSD-2-Clause
  resources: {}
environment:
  contents:
    build_repositories:
      - https://apk.cgr.dev/chainguard
      - https://packages.wolfi.dev/os
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    packages:
      - binutils=2.44-r9
      - build-base=1-r8
      - busybox=1.37.0-r46
      - ca-certificates-bundle=20250619-r2
      - gcc=15.1.0-r1
      - glibc-dev=2.41-r53
      - glibc-locale-posix=2.41-r53
      - glibc=2.41-r53
      - gmp=6.3.0-r8
      - isl=0.27-r3
      - ld-linux=2.41-r53
      - libatomic=15.1.0-r1
      - libcrypt1=2.41-r53
      - libcrypto3=3.5.1-r0
      - libgcc=15.1.0-r1
      - libgo=15.1.0-r1
      - libgomp=15.1.0-r1
      - libquadmath=15.1.0-r1
      - libssl3=3.5.1-r0
      - libstdc++-dev=15.1.0-r1
      - libstdc++=15.1.0-r1
      - libxcrypt-dev=4.4.38-r2
      - libxcrypt=4.4.38-r2
      - libzstd1=1.5.7-r2
      - linux-headers=6.15.6-r1
      - make=4.4.1-r8
      - mpc=1.3.1-r6
      - mpfr=4.2.2-r2
      - nss-db=2.41-r53
      - nss-hesiod=2.41-r53
      - openssf-compiler-options=20240627-r25
      - pkgconf=2.5.1-r0
      - posix-cc-wrappers=1-r7
      - scanelf=1.3.8-r4
      - wget=1.25.0-r3
      - wolfi-baselayout=20230201-r22
      - zlib=1.3.1-r51
  accounts:
    run-as: ""
    users:
      - username: build
        uid: 1000
        gid: 1000
        shell: ""
        homedir: /home/build
    groups:
      - groupname: build
        gid: 1000
        members:
          - build
  archs:
    - amd64
  environment:
    GOFLAGS: ""
    GOMODCACHE: /var/cache/melange/gomodcache
    GOPATH: /home/build/.cache/go
    GOTOOLCHAIN: local
    HOME: /home/build
    PYTHONHASHSEED: "0"
pipeline:
  - uses: fetch
    with:
      expected-sha256: 96d33abb4bb0070c7be0fed4246cd38416188325f820468214471938545b1ac8
      purl-name: mpdecimal
      purl-version: 4.0.1
      uri: https://www.bytereef.org/software/mpdecimal/releases/mpdecimal-4.0.1.tar.gz
    pipeline:
      - runs: |
          if [ "96d33abb4bb0070c7be0fed4246cd38416188325f820468214471938545b1ac8" == "" ] && [ "" == "" ]; then
          	printf "One of expected-sha256 or expected-sha512 is required"
          	exit 1
          fi
          bn=$(basename https://www.bytereef.org/software/mpdecimal/releases/mpdecimal-4.0.1.tar.gz)
          if [ ! "96d33abb4bb0070c7be0fed4246cd38416188325f820468214471938545b1ac8" == "" ]; then
          	fn="/var/cache/melange/sha256:96d33abb4bb0070c7be0fed4246cd38416188325f820468214471938545b1ac8"
          	if [ -f $fn ]; then
          		printf "fetch: found $fn in cache\n"
          		cp $fn $bn
          	fi
          else
          	fn="/var/cache/melange/sha512:"
          	if [ -f $fn ]; then
          		printf "fetch: found $fn in cache\n"
          		cp $fn $bn
          	fi
          fi
          if [ ! -f $bn ]; then
          	wget '-T5' '--dns-timeout=20' '--tries=5' --random-wait --retry-connrefused --continue 'https://www.bytereef.org/software/mpdecimal/releases/mpdecimal-4.0.1.tar.gz'
          fi
          if [ "96d33abb4bb0070c7be0fed4246cd38416188325f820468214471938545b1ac8" != "" ]; then
          	printf "fetch: Expected sha256: 96d33abb4bb0070c7be0fed4246cd38416188325f820468214471938545b1ac8\n"
          	sum=$(sha256sum $bn | awk '{print $1}')
          	if [ "96d33abb4bb0070c7be0fed4246cd38416188325f820468214471938545b1ac8" != "$sum" ]; then
          		printf "fetch: Expected sha256 does not match found: $sum\n"
          		exit 1
          	fi
          else
          	printf "fetch: Expected sha512: \n"
          	sum=$(sha512sum $bn | awk '{print $1}')
          	if [ "" != "$sum" ]; then
          		printf "fetch: Expected sha512 does not match found: $sum\n"
          		exit 1
          	fi
          fi
          if [ "true" = "true" ]; then
          	tar -x '--strip-components=1' -C '.' -f $bn
          fi
          if [ "false" = "true" ]; then
          	rm $bn
          fi
  - name: Configure
    runs: |
      ./configure \
      	--host=x86_64-pc-linux-gnu \
      	--target=x86_64-pc-linux-gnu \
      	--prefix=/usr
  - uses: autoconf/make
    pipeline:
      - runs: |
          make -C "." -j$(nproc) V=1
  - uses: autoconf/make-install
    pipeline:
      - runs: |
          make -C "." install DESTDIR="/home/build/melange-out/mpdecimal" V=1
      - runs: |
          find /home/build/melange-out/mpdecimal -name '*.la' -print -exec rm \{} \;
  - uses: strip
    pipeline:
      - runs: |
          scanelf --recursive --nobanner --osabi --etype "ET_DYN,ET_EXEC" . |
          	while read type osabi filename; do

          		[ "$osabi" != "STANDALONE" ] || continue

          		strip -g "${filename}" || [ ! -e "$filename" ]
          	done
        working-directory: /home/build/melange-out/mpdecimal
subpackages:
  - name: mpdecimal-dev
    pipeline:
      - uses: split/dev
        pipeline:
          - runs: |
              PACKAGE_DIR="/home/build/melange-out/mpdecimal"
              if [ -n "" ]; then
              	PACKAGE_DIR="/home/build/melange-out/"
              fi
              if [ "$PACKAGE_DIR" == "/home/build/melange-out/mpdecimal-dev" ]; then
              	echo "ERROR: Package can not split files from itself!" && exit 1
              fi
              i= j=
              cd "$PACKAGE_DIR" || exit 0
              libdirs=usr/
              [ -d lib/ ] && libdirs="lib/ $libdirs"
              for i in usr/include usr/lib/pkgconfig usr/share/pkgconfig \
              	usr/share/aclocal usr/share/gettext \
              	usr/bin/*-config usr/bin/*_config usr/share/vala/vapi \
              	usr/share/gir-[0-9]* usr/share/qt*/mkspecs \
              	usr/lib/qt*/mkspecs \
              	usr/lib/cmake usr/share/cmake \
              	usr/lib/glade/modules usr/share/glade/catalogs \
              	$(find . -name include -type d) \
              	$(find $libdirs -name '*.a' 2>/dev/null) \
              	$(find $libdirs -name '*.[cho]' \
              		-o -name '*.prl' 2>/dev/null); do
              	if [ -e "$PACKAGE_DIR/$i" ] || [ -L "$PACKAGE_DIR/$i" ]; then
              		d="/home/build/melange-out/mpdecimal-dev/${i%/*}"
              		mkdir -p "$d"
              		mv "$PACKAGE_DIR/$i" "$d"
              		rmdir "$PACKAGE_DIR/${i%/*}" 2>/dev/null || :
              	fi
              done
              for i in lib/*.so usr/lib/*.so; do
              	if [ -L "$i" ]; then
              		mkdir -p "/home/build/melange-out/mpdecimal-dev"/"${i%/*}"
              		mv "$i" "/home/build/melange-out/mpdecimal-dev/$i" || return 1
              	fi
              done
    dependencies:
      runtime:
        - mpdecimal
    description: mpdecimal headers
    commit: 816f399eca16c98994a5f607d6a8de6df29939b9
    test:
      environment:
        contents:
          packages:
            - ldd-check
            - mpdecimal-dev
            - pkgconf
        accounts:
          run-as: ""
          users:
            - username: build
              uid: 1000
              gid: 1000
              shell: ""
              homedir: ""
          groups:
            - groupname: build
              gid: 1000
              members:
                - build
      pipeline:
        - uses: test/pkgconf
          pipeline:
            - name: pkgconf build dependency check
              runs: |
                dev_pkg=$(basename /home/build/melange-out/mpdecimal-dev)
                cd /
                pc_files=false
                for pc_file in $(apk info -L "$dev_pkg" 2>/dev/null | grep "\.pc$"); do
                	pc_files=true

                	if grep -q "^Name:" $pc_file; then
                		lib_name=$(basename "$pc_file" ".pc")

                		echo "$pc_file" | grep -q "^usr/lib/pkgconfig/${lib_name}.pc$\|^usr/share/pkgconfig/${lib_name}.pc$"

                		pkgconf --exists $lib_name || pkgconf --print-errors --exists $lib_name

                		if grep -q "^Version:" $pc_file; then
                			pkgconf --modversion $lib_name
                		fi

                		if grep -q "^Libs:" $pc_file; then
                			pkgconf --libs $lib_name
                		fi

                		if grep -q "^Cflags:" $pc_file; then
                			pkgconf --cflags $lib_name
                		fi
                	fi
                done
                if [ $pc_files = "false" ]; then
                	echo "No .pc files found in $dev_pkg please remove the pkgconf test"
                fi
        - uses: test/tw/ldd-check
          pipeline:
            - name: check for missing library dependencies using ldd
              runs: |
                ldd-check \
                	--files="" \
                	--packages="mpdecimal-dev" \
                	--extra-library-paths="" \
                	--verbose="false"
  - name: mpdecimal-doc
    pipeline:
      - uses: split/manpages
        pipeline:
          - runs: |
              PACKAGE_DIR="/home/build/melange-out/mpdecimal"
              if [ -n "" ]; then
              	PACKAGE_DIR="/home/build/melange-out/"
              fi
              if [ "$PACKAGE_DIR" = "/home/build/melange-out/mpdecimal-doc" ]; then
              	echo "ERROR: Package can not split files from itself!" && exit 1
              fi
              for mandir in \
              	"$PACKAGE_DIR/usr/share/man" \
              	"$PACKAGE_DIR/usr/local/share/man" \
              	"$PACKAGE_DIR/usr/man"; do

              	if [ -d "$mandir" ]; then
              		mkdir -p "/home/build/melange-out/mpdecimal-doc/usr/share/man"
              		mv "$mandir"/* "/home/build/melange-out/mpdecimal-doc/usr/share/man/"
              		rmdir --parents --ignore-fail-on-non-empty "$mandir"
              	fi
              done
    description: mpdecimal docs
    commit: 816f399eca16c98994a5f607d6a8de6df29939b9
    test:
      environment:
        contents:
          packages:
            - apk-tools
            - grep
            - man-db
            - mpdecimal-doc
            - texinfo
        accounts:
          run-as: ""
          users:
            - username: build
              uid: 1000
              gid: 1000
              shell: ""
              homedir: ""
          groups:
            - groupname: build
              gid: 1000
              members:
                - build
      pipeline:
        - uses: test/docs
          pipeline:
            - name: docs readability check
              runs: |
                doc_pkg=$(basename /home/build/melange-out/mpdecimal-doc)
                if [ $(apk info -qL "$doc_pkg" | grep -v "^var/lib/db/sbom" | grep -v "^$" | wc -l) -eq 0 ]; then
                	echo "See:"
                	apk info -qL "$doc_pkg"
                	echo "This package [$doc_pkg] is completely empty (i.e. installs no files)."
                	echo "Please check the package build for proper docs installation, and either:"
                	echo "  (a) fix the docs subpackage build to actually include documentation (check the split/manpages and split/infodir pipelines), or"
                	echo "  (b) remove the test/docs pipeline (if for some reason we want an empty docs package), or"
                	echo "  (c) remove the docs subpackage entirely"
                	exit 1
                fi
                cd /
                doc_files=false
                for doc_file in $(apk info -qL "$doc_pkg" | grep "^usr/share/man/" | grep -v "^usr/share/man/db/"); do
                	if [ -f /"$doc_file" ]; then

                		man -l /"$doc_file" >/dev/null
                		doc_files=true
                	fi
                done
                for doc_file in $(apk info -qL "$doc_pkg" | grep "^usr/share/info/"); do
                	if [ -f /"$doc_file" ]; then

                		[ $(info -f /"$doc_file" -o - | wc -l) -gt 0 ] && doc_files=true
                	fi
                done
                for doc_file in $(apk info -qL "$doc_pkg" | grep "^usr/share/"); do
                	if [ -f /"$doc_file" ]; then

                		cat /"$doc_file" >/dev/null
                		doc_files=true
                	fi
                done
                if [ $doc_files = "false" ]; then
                	echo "See:"
                	apk info -qL "$doc_pkg"
                	echo "This package [$doc_pkg] installs files, but no usable documentation"
                	echo "Please check the package build for proper docs installation, and either:"
                	echo "  (a) fix the docs subpackage build to actually include docs (check the split/manpages and split/infodir pipelines), or"
                	echo "  (b) remove the test/docs pipeline"
                	exit 1
                fi
update:
  enabled: true
  manual: false
  require-sequential: false
  release-monitor:
    identifier: 11578
test:
  environment:
    contents:
      packages:
        - ldd-check
        - mpdecimal
    accounts:
      run-as: ""
      users:
        - username: build
          uid: 1000
          gid: 1000
          shell: ""
          homedir: ""
      groups:
        - groupname: build
          gid: 1000
          members:
            - build
  pipeline:
    - uses: test/tw/ldd-check
      pipeline:
        - name: check for missing library dependencies using ldd
          runs: |
            ldd-check \
            	--files="" \
            	--packages="mpdecimal" \
            	--extra-library-paths="" \
            	--verbose="false"
